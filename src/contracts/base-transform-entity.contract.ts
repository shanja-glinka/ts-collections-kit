/**
 * Контракт для преобразования обычных (plain) объектов в экземпляры сущностей.
 * Этот контракт можно расширять при необходимости.
 */
export abstract class IBaseTransformEntityContract {
  /**
   * Преобразует обычный объект в экземпляр текущего класса и выполняет его валидацию.
   *
   * @param plain Обычный объект для преобразования.
   * @returns Преобразованный и валидированный экземпляр.
   *
   * @throws Ошибка, если валидация не проходит.
   */
  static plainToInstance<T>(this: new () => T, plain: object): Promise<T> {
    throw new Error('Метод не реализован.');
  }
}
